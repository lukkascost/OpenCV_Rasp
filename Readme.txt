- Atividades realizadas projeto COURO  - INICIO 08/16

- 2016/12/14 INICIO DO PROJETO NO GITHUB LUKKASCOST/OPENCV_RASP
	- CRIADO O PROJETO EM PYTHON BASEADO NOS EXEMPLOS DOS ALUNOS DO PEDROSA.
	- IMPLEMENTAÇÃO ORIGINAL EM C PASSAR PARA PYTHON.
	- AMBIENTAÇÃO E ESTUDO SOBRE O FUNCIONAMENTO DO SVM NO OPENCV 
	
- 2016/12/15
	- ACRESCENTADA A IMPLEMENTACAO DE UM METODO DE NORMALIZAÇÃO DOS DADOS.
	- ACURACIA AUMENTOU CONSIDERAVELMENTE COM DADOS NORMLIZADOS (ANTES 20% AGORA 40%)

- 2016/12/19
	- DESCOBERTO OS METODOS SVM.SAVE E SVM.LOAD QUE PERMITEM EXPORTAR E IMPORTAR OS VETORES SUPORTE
	- CRIADO O ARQUIVO DE PREDIÇÃO SEPARADO DO ARQUIVO DE TREINAMENTO. 
	- ONDE O ARQUIVO DE TREINAMENTO FICARIA EM UM PC E O PREDIÇÃO NA RASPBERRY OU OUTRO EMBARCADO.
	- FALTA SABER OS PARAMETROS UTILIZADOS NO ARTIGO DO PEDROSA.

- 2016/12/20
	- RECEBIDO O BANCO DE IMAGENS DOS COURO DO PEDROSA.
	- RECEBI O ARQUIVO GLCM COM OS ATRIBUTOS EXTRAIDOS PELO FAUSTO DAS IMAGENS DO PEDROSA.
	- ESTUDO SOBRE O METODO DE EXTRAÇÃO DE ATRIBUTOS GLCM.
	- INICIO DE UMA IMPLEMENTACAO DO GLCM PARA EMBARCAR(PYTHON).

- 2016/12/22
	- TENTANDO DESCOBRIR OS PARAMETROS MELHORES PARA OS PARAMETROS DO SVM, PEDROSA NAO MANDOU OS UTILIZADOS NO ARTIGO.
	- CRIEI UM PROGRAMA QUE TREINA E TESTA COM DIFERENTES VALORES DE C PARA O SVM LINEAR ATÉ DESCOBRIR UM BOM O SUFICIENTE.
	- ACURACIA PROXIMA DOS 45% COM C MELHORES.
	- CRIEI UM ARQUIVO GLCM_MIX COM AS CLASSES MISTURADAS E FACILITAR A IMPORTAÇÃO PARA O TREINO E TESTE.
	- O ARQUIVO ANTES ERA ELEMENTOS CLASSE 0,..., ELEMENTOS CLASSE 1 , ... 
	- AGORA ESTA NO FORMATO ELEMENTO CLASSE 0, CLASSE 1,..., CLASSE 0, CLASSE 1, ...
	- SEPARADO ARQUIVO COM METODOS EM COMUM EM DIFERENTES ARQUIVOS PARA FACILITAR O REUSO DESTES METODOS.
	- RETIRADO TODOS OS METODOS DOS ARQUIVOS E ADICIONADO NO ARQUIVO "METODOS.PY"

- 2016/12/27
	- FAZENDO O SEGUINTE TESTE:
		SE EU TREINAR NO PC E PREDIZER NO PC VOU TER UNS ACERTOS E ERROS
		SE EU PREDIZER COM OS VETORES DO TREINO NO PC NUMA OUTRA PLATAFORMA ELE ACERTA A MESMA QUANTIDADE 
		E QUANDO ERRA, ERRA PARA O MESMO RESULTADO.
	- CRIEI UM METODO PARA SALVAR O CONJUNTO USADO NO TREINO, TESTE E RESULTADOS OBTIDOS NA PLATAFORMA.
	- CRIEI UM METODO PARA LER O CONJUNTO DE TREINO, TESTE E RESULTADOS DO TESTE SALVO.
	- NA RASPBERRY VERIFIQUEI SE COM OS VETORES GERADOS NO PC ELE ACERTA E ERRA NOS MESMOS LOCAIS 
		E SE QUANDO ERRA, ERRA PARA O MESMO VALOR, O TESTE FOI BEM SUCEDIDO E OS RESULTADOS OBTIDOS
		FORAM QUE É TUDO IGUAL, PREDICT NA PLATAFORMA QUE TREINOU OU EM OUTRA PLATAFORMA.
	- ATUALIZEI ARQUIVOS DE PREDICT E TEST PARA ESSAS MODIFICAÇÕES.

- 2017/01/11
	- INICIO DOS TESTES DE MEMORIA ATRAVES DO ARQUIVO DO SISTEMA
	- "cat /proc/PID/status " ONDE PID É O ID DO PROCESSO A SER MEDIDO A MEMORIA.
	- ESSE ARQUIVO CONTEM VARIAS INFORMAÇOES SOBRE O PROCESSO, INCLUSIVE A MEMORIA UTILIZADA.
	
- 2017/01/17
	- ORGANIZAÇÃO DOS ARQUIVOS DE SAIDA.
	- PEDROSA ENVIOU O ARQUIVO GLCM PROVAVELMENTE UTILIZADO NO ARTIGO.
	- CRIEI O ARQUIVOS:
		DataBase/treinoAtrib.txt - CONTENDO OS ATRIBUTOS UTILIZADOS PARA TREINO;
		DataBase/treinoLabel.txt - CONTENDO OS RESULTADOS DOS ATRIBUTOS, CLASSE DO COURO;
		DataBase/teste.txt		 - CONTENDO OS ATRIBUTOS UTILIZADOS PARA TESTE;
		DataBase/testeLabel.txt	 - CONTENDO OS RESULTADOS DOS ATRIBUTOS DE TESTE PARA COMPARAÇÃO COM A SAIDA DO SVM.
	- SEPARACAO DE TREINO E TESTE DA SEGUINTE FORMA.
		- 1 ATRIBUTO E LABEL DA CLASSE 0
		- 1 ATRIBUTO E LABEL DA CLASSE 1 
		- ...
		- 1 ATRIBUTO E LABEL DA CLASSE 6 
		- 1 ATRIBUTO E LABEL DA CLASSE 0 
		- ...
		- ATE O TOTAL DE LINHAS SER A QUANTIDADE USADA PARA TREINO, O RESTANTE FICA PARA TESTE;
		- SOMENTE OS X PRIMEIROS DE CADA CLASSE PARA TREINO.
	- CRIEI O ARQUIVO DB_GLCM_MIX PARA FACILITAR A IMPORTAÇÃO.
	- svm_arrumaArquivos.py SERVE PARA PASSAR O ARQUIVO GLCM DO FORMATO ANTIGO PARA ESSE MEU FORMATO DB_GLCM_MIX
	
- 2017/01/18
	- ADICIONADO ARQUIVOS:
		-DataBase/testing.dat
			- ARQUIVO DO PEDROSA CONTENDO O CONJUNTO DE DADOS USADO PARA TESTE DOS RESULTADOS DELE.
			? FALTA DESCOBRIR SE ESSE É REALMENTE O CONJUNTO E DE QUAL ITERAÇÃO.
		-DataBase/train.dat
			- ARQUIVO DO PEDROSA CONTENDO O CONJUNTO DE DADOS USADO PARA TREINO DO CLASSIFICADOR.
			? FALTA DESCOBRIR SE ESSE É REALMENTE O CONJUNTO E DE QUAL ITERAÇÃO.
	
- 2017/01/19
	- CRIADO ARQUIVO svm_tudo.py QUE TESTA COM O CONJUNTO DO PEDROSA
	- DESCOBRI O PARAMETRO k_fold = K  ONDE ELE DIVIDE O CONJUNTO DE TREINO EM K CONJUNTO E REALIZA A SELECAO CRUSADA DE VETORES SUPORTE
	- CRIEI O ARQUIVO svm_k_variante.py PARA VARIAR O K E VER O EFEITO DESDE PARAMETRO NA ACURACIA.
	- GEREI RESULTADOS E A MELHOR ACURACIA FOI COM K=2 COM 61.5384615385%;
	
- 2017/02/06
	- CRIADO ARQUIVO GLCM.py
		- GERA A PARTE DE EXTRACAO DE ATRIBUTOS DAS IMAGENS.
	- IMPLEMETAR O PROCESSO DESDE A EXTRACAO ATE A CLASSIFICACAO DAS CARACTERISTICAS DOS COUROS.
	- GLCM IMPLEMENTADO IGUAL O DO CODIGO FONTE ENVIADO PELO PEDROSA.

- 2017/02/08
	- CONTINUAÇÃO DA IMPLEMENTACAO DO GLCM

- 2017/02/12
	- MOVIDO OS METODOS DO GLCM PARA O ARQUIVO DE METODOS.
	- CRIADO ARQUIVO Gera_resize.py ONDE
		- ELE FAZ O GLCM PARA AS 350 IMAGENS E GERA O RESULTADO EM UM ARQUIVO.
		- ESSE PROCESSO SE REPETE COM UM RESIZE NA IMAGEM DE 1 A 100% DO TAMANO ORIGINAL.
		- RESIZE UTILIZADO FOI O PADRAO DO OPENCV.
		- SALVA NO ARQUIVO GLCM_RESIZE/GLCM_10.0.TXT  OS ATRIBUTOS COM 10% DO TAMANHO ORIGINAL.
	- CRIADO O METODO cria_Arquivo_GLCM NO METODOS ONDE:
		- O PARAMETRO PERCENT É A PORCENTAGEM DA IMAGEM ORIGINAL. 
		- COMO SAIDA ELE GRAVA O ARQUIVO GLCM.

- 2017/02/13
	- CRIADO ARQUIVO svm_tudo_itera.py
		- ELE ABRE UM ARQUIVO GLCM.
		- E PRECISA COMO ENTRADA O NUMERO DE ITERAÇOES E A QUANTIDADE DE AMOSTRAS DE TREINO POR CLASSE
		- CADA ITERACAO O CONJUNTO DE TREINO TEM AS AMOSTRAS ALEATORIAMENTE SELECIONADAS.
		- SELECIONA UMA QUATIDADE IGUAL DE CADA CLASSE PARA TREINO E O RESTO PARA TESTE.
		- COMO SAIDA UM ARQUIVO COM TODAS AS ITERAÇOES,
		- CADA ITERACAO COM:
			- TAXA DE ACERTO GERAL
			- NUMERO DE ACERTOS DE TODAS AS CLASSES
			- NUMERO DE ERROS DE TODAS AS CLASSES
			- POR CLASSE O NUMERO DE ACERTOS ERROS E ACURACIA
			- O TIPO DE KERNEL DO SVM
		- NO FIM DO ARQUIVO RELACIONADO A TODAS AS ITERAÇOES TEM:
			- POR CLASSE A ACURACIA MINIMA E MAXIMA, MEDIA E DESVIO.
			- E DE TODAS AS CLASSES.

- 2017/02/14
	- GERADO ARQUIVOS DE 1 A 10% GLCM.
	- RESULTADOS DOS ARQUIVOS GRAVADOS PELO ARQUIVO svm_tudo_itera.py

- 2017/02/16
	- MODIFICAÇÕES NO svm_tudo_itera PARA ESPECIFICAR UM RANGE PARA VARIAR A PORCENTAGEM E GERAR AUTOMATICAMENTE OS RESULTADOS;

- 2017/02/22
	- VOLTA DAS MEDICOES DE MEMORIA E TESTES PARA VALIDAR.
	- TENTANOD ENCONTRAR UM MEIO EFICIENTE E CONFIAVEL PARA MEDIR MEMORIA.
	
- 2017/02/23
	- CRIADO METODO memory() ONDE:
		- ACESSA A MEMORIA DO SISTEMA E INFORMA MEMORIA LIVRE E MEMORIA UTILIZADA.
	- MEDINDO MEMORIA DOS VETORES SUPORTE:
		- CHAMO O METODO memory ANTES E GRAVO O ESTADO ATUAL DE MEMORIA RAM DO SISTEMA,
		- FACO LOAD DO ARQUIVO DE VETORES SUPORTE, IMPORTANTO OS VETORES PARA O OBJETO.
		- CHAMO NOVAMENTE O METODO MEMORY E FACO A VARIACAO DE MEMORIA UTILIZADA.
		- O METODO RETORNOU O VALOR 124KB, MESMO VALOR EM PYTHON E EM C COM O METODO SIMILAR.

- 2017/03/02
	- CRIADO METODO Train_extract ONDE É ESTRAIDO OS ATRIBUTOS PARA TREINO ALEATORIAMENTE DE UMA CLASSE
	- CRIADO ARQUIVO svm_matriz_pesos.py ONDE:
		- CONTEM A MATRIZ DE PESOS PARA CALCULO DO ESCORE DE ACERTO E ERRO.
		- CALCULA AGORA ESCORES DE ERRO E ACERTO PARA MELHOR IDENTIFICAR RESULTADOS.
		- RESULTADOS DE ESCORE DE ERRO E ACERTO DA MESMA FORMA QUE OS DA ACURACIA.(MINIMOS MAXIMOS, MEDIAS E DESVIOS);

- 2017/03/07
	- METODO cria_Arquivo_GLCM(percent,method, text) AGORA RECEBE COMO PARAMETRO METHOD E TEXT.
		- METHOD É UM INTEIRO PARA ESPECIFICAR O METODO DE INTEPOLAÇAO DO RESIZE.
			0 INTER_NEAREST
			1 INTER_LINEAR
			2 INTER_AREA
			3 INTER_CUBIC 
			4 INTER_LANCZOS4
		- TEXT É O NOME DO METODO DE INTERPOLACAO USADO COMO NOME DA PASTA DE CAMINHO PARA O ARQUIVO.
	- OS ARQUIVOS GERADOS ANTES SAO TODOS COM INTERPOLACAO LINEAR POIS É O PADRAO DO RESIZE DO OPENCV.
	- CRIAR O GLCM DOS ARQUIVOS DE 1 EM 1 EM CADA METODO DE INTERPOLACAO.
	
- 2017/03/08	
	- GRAVADO JUNTO COM OS RESULTADO OS ARQUIVOS DE VETORES CONTENDO:
		- OS VETORES DE ACURACIA, CADA ARQUIVO DE UMA PORCENTAGEM, E CONTEM AS ACURACIAS DE CADA CLASSE NAS 50 ITERCOES
		- OS VETORES DE ESCORE DE ACERTO
		- OS VETORES DE ESCORE DE ERROS
		- A MATRIZ DE CONFUSAO
	- AGORA PARA GERAR GRAFICOS NAO É NECESARIO GERAR NOVAMENTE AS 50 ITERAÇOES, BASTA IMPORTAR OS DADOS.
	- CRIADO ARQUIVO PARA GERAÇÃO DE GRAFICOS svm_importMat.py

- 2017/03/09
	- CRIADO OS METODOS five_best_avg E avg ONDE O PRIMEIRO RETORNA A MEDIA DOS 5 MELHORES E O SEGUNDO A MEDIA GERAL.
	- POR PARAMETRO É PASSADA O VETOR DE ACERTOS ERROS OU ACURACIA.
	- ARQUIVO svm_importMat AGORA EXPORTA GRAFICOS COM A MATPLOTLIB.
